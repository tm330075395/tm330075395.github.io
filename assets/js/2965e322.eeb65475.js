"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9711],{31713:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>_,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var t=a(74848),i=a(28453);const r={sidebar_position:9},s="4.\u591a\u5a92\u4f53 \u4f8b\u7a0b\u8bb2\u89e3",o={id:"CanaanK230/part5/MultimediaRoutineExplanation",title:"4.\u591a\u5a92\u4f53 \u4f8b\u7a0b\u8bb2\u89e3",description:"1.acodec - g711 \u7f16\u89e3\u7801\u4f8b\u7a0b",source:"@site/docs/CanaanK230/part5/09_MultimediaRoutineExplanation.md",sourceDirName:"CanaanK230/part5",slug:"/CanaanK230/part5/MultimediaRoutineExplanation",permalink:"/docs/CanaanK230/part5/MultimediaRoutineExplanation",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CanaanK230/part5/09_MultimediaRoutineExplanation.md",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9},sidebar:"canaanK230Sidebar",previous:{title:"3.\u5916\u8bbe \u4f8b\u7a0b\u8bb2\u89e3",permalink:"/docs/CanaanK230/part5/PeripheralsRoutineexplanation"},next:{title:"5.\u7f51\u7edc \u4f8b\u7a0b\u8bb2\u89e3",permalink:"/docs/CanaanK230/part5/NetworkRoutineExplanation"}},p={},d=[{value:"1.acodec - g711 \u7f16\u89e3\u7801\u4f8b\u7a0b",id:"1acodec---g711-\u7f16\u89e3\u7801\u4f8b\u7a0b",level:2},{value:"2.audio - \u97f3\u9891\u91c7\u96c6\u8f93\u51fa\u4f8b\u7a0b",id:"2audio---\u97f3\u9891\u91c7\u96c6\u8f93\u51fa\u4f8b\u7a0b",level:2},{value:"3.Camera - \u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b",id:"3camera---\u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b",level:2},{value:"4. Camera - \u591a\u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b",id:"4-camera---\u591a\u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b",level:2},{value:"5. Display - \u56fe\u50cf\u91c7\u96c6\u663e\u793a\u5b9e\u4f8b",id:"5-display---\u56fe\u50cf\u91c7\u96c6\u663e\u793a\u5b9e\u4f8b",level:2},{value:"6. mp4 muxer \u4f8b\u7a0b",id:"6-mp4-muxer-\u4f8b\u7a0b",level:2},{value:"8. player - mp4 \u6587\u4ef6\u64ad\u653e\u5668\u4f8b\u7a0b",id:"8-player---mp4-\u6587\u4ef6\u64ad\u653e\u5668\u4f8b\u7a0b",level:2},{value:"9. venc - venc \u4f8b\u7a0b",id:"9-venc---venc-\u4f8b\u7a0b",level:2},{value:"10. lvgl - lvgl \u4f8b\u7a0b",id:"10-lvgl---lvgl-\u4f8b\u7a0b",level:2}];function m(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.header,{children:(0,t.jsx)(e.h1,{id:"4\u591a\u5a92\u4f53-\u4f8b\u7a0b\u8bb2\u89e3",children:"4.\u591a\u5a92\u4f53 \u4f8b\u7a0b\u8bb2\u89e3"})}),"\n",(0,t.jsx)(e.h2,{id:"1acodec---g711-\u7f16\u89e3\u7801\u4f8b\u7a0b",children:"1.acodec - g711 \u7f16\u89e3\u7801\u4f8b\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u793a\u4f8b\u7a0b\u5e8f\u7528\u4e8e\u5bf9 CanMV \u5f00\u53d1\u677f\u8fdb\u884c\u4e00\u4e2a g711 \u7f16\u89e3\u7801\u7684\u529f\u80fd\u5c55\u793a\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# g711 encode/decode example\n#\n# Note: You will need an SD card to run this example.\n#\n# You can collect raw data and encode it into g711 or decode it into raw data output.\n\nimport os\nfrom mpp.payload_struct import * #\u5bfc\u5165payload\u6a21\u5757\uff0c\u7528\u4e8e\u83b7\u53d6\u97f3\u89c6\u9891\u7f16\u89e3\u7801\u7c7b\u578b\nfrom media.media import * #\u5bfc\u5165media\u6a21\u5757\uff0c\u7528\u4e8e\u521d\u59cb\u5316vb buffer\nfrom media.pyaudio import * #\u5bfc\u5165pyaudio\u6a21\u5757\uff0c\u7528\u4e8e\u91c7\u96c6\u548c\u64ad\u653e\u97f3\u9891\nimport media.g711 as g711 #\u5bfc\u5165g711\u6a21\u5757\uff0c\u7528\u4e8eg711\u7f16\u89e3\u7801\n\ndef exit_check():\n    try:\n        os.exitpoint()\n    except KeyboardInterrupt as e:\n        print("user stop: ", e)\n        return True\n    return False\n\ndef encode_audio(filename, duration):\n    CHUNK = int(44100/25) #\u8bbe\u7f6e\u97f3\u9891chunk\u503c\n    FORMAT = paInt16 #\u8bbe\u7f6e\u91c7\u6837\u7cbe\u5ea6\n    CHANNELS = 2 #\u8bbe\u7f6e\u58f0\u9053\u6570\n    RATE = 44100 #\u8bbe\u7f6e\u91c7\u6837\u7387\n\n    try:\n        p = PyAudio()\n        p.initialize(CHUNK) #\u521d\u59cb\u5316PyAudio\u5bf9\u8c61\n        enc = g711.Encoder(K_PT_G711A,CHUNK) #\u521b\u5efag711\u7f16\u7801\u5668\u5bf9\u8c61\n        MediaManager.init()    #vb buffer\u521d\u59cb\u5316\n\n        enc.create() #\u521b\u5efa\u7f16\u7801\u5668\n        #\u521b\u5efa\u97f3\u9891\u8f93\u5165\u6d41\n        stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=RATE,\n                        input=True,\n                        frames_per_buffer=CHUNK)\n\n        frames = []\n        #\u91c7\u96c6\u97f3\u9891\u6570\u636e\u7f16\u7801\u5e76\u5b58\u5165\u5217\u8868\n        for i in range(0, int(RATE / CHUNK * duration)):\n            frame_data = stream.read() #\u4ece\u97f3\u9891\u8f93\u5165\u6d41\u4e2d\u8bfb\u53d6\u97f3\u9891\u6570\u636e\n            data = enc.encode(frame_data) #\u7f16\u7801\u97f3\u9891\u6570\u636e\u4e3ag711\n            frames.append(data)  #\u5c06g711\u7f16\u7801\u6570\u636e\u4fdd\u5b58\u5230\u5217\u8868\u4e2d\n            if exit_check():\n                break\n        #\u5c06g711\u7f16\u7801\u6570\u636e\u5b58\u5165\u6587\u4ef6\u4e2d\n        with open(filename,mode=\'w\') as wf:\n            wf.write(b\'\'.join(frames))\n        stream.stop_stream() #\u505c\u6b62\u97f3\u9891\u8f93\u5165\u6d41\n        stream.close() #\u5173\u95ed\u97f3\u9891\u8f93\u5165\u6d41\n        p.terminate() #\u91ca\u653e\u97f3\u9891\u5bf9\u8c61\n        enc.destroy() #\u9500\u6bc1g711\u97f3\u9891\u7f16\u7801\u5668\n    except BaseException as e:\n            print(f"Exception {e}")\n    finally:\n        MediaManager.deinit() #\u91ca\u653evb buffer\n\ndef decode_audio(filename):\n    FORMAT = paInt16 #\u8bbe\u7f6e\u97f3\u9891chunk\u503c\n    CHANNELS = 2 #\u8bbe\u7f6e\u58f0\u9053\u6570\n    RATE = 44100 #\u8bbe\u7f6e\u91c7\u6837\u7387\n    CHUNK = int(RATE/25) #\u8bbe\u7f6e\u97f3\u9891chunk\u503c\n\n    try:\n        wf = open(filename,mode=\'rb\') #\u6253\u5f00g711\u6587\u4ef6\n        p = PyAudio()\n        p.initialize(CHUNK) #\u521d\u59cb\u5316PyAudio\u5bf9\u8c61\n        dec = g711.Decoder(K_PT_G711A,CHUNK) #\u521b\u5efag711\u89e3\u7801\u5668\u5bf9\u8c61\n        MediaManager.init()    #vb buffer\u521d\u59cb\u5316\n\n        dec.create() #\u521b\u5efa\u89e3\u7801\u5668\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u51fa\u6d41\n        stream = p.open(format=FORMAT,\n                    channels=CHANNELS,\n                    rate=RATE,\n                    output=True,\n                    frames_per_buffer=CHUNK)\n\n        stream_len = CHUNK*CHANNELS*2//2  #\u8bbe\u7f6e\u6bcf\u6b21\u8bfb\u53d6\u7684g711\u6570\u636e\u6d41\u957f\u5ea6\n        stream_data = wf.read(stream_len) #\u4eceg711\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\n\n        #\u89e3\u7801g711\u6587\u4ef6\u5e76\u64ad\u653e\n        while stream_data:\n            frame_data = dec.decode(stream_data) #\u89e3\u7801g711\u6587\u4ef6\n            stream.write(frame_data) #\u64ad\u653eraw\u6570\u636e\n            stream_data = wf.read(stream_len) #\u4eceg711\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u636e\n            if exit_check():\n                break\n        stream.stop_stream() #\u505c\u6b62\u97f3\u9891\u8f93\u5165\u6d41\n        stream.close() #\u5173\u95ed\u97f3\u9891\u8f93\u5165\u6d41\n        p.terminate() #\u91ca\u653e\u97f3\u9891\u5bf9\u8c61\n        dec.destroy() #\u9500\u6bc1\u89e3\u7801\u5668\n        wf.close() #\u5173\u95edg711\u6587\u4ef6\n\n    except BaseException as e:\n            print(f"Exception {e}")\n    finally:\n        MediaManager.deinit() #\u91ca\u653evb buffer\n\ndef loop_codec(duration):\n    CHUNK = int(44100/25) #\u8bbe\u7f6e\u97f3\u9891chunk\u503c\n    FORMAT = paInt16 #\u8bbe\u7f6e\u91c7\u6837\u7cbe\u5ea6\n    CHANNELS = 2 #\u8bbe\u7f6e\u58f0\u9053\u6570\n    RATE = 44100 #\u8bbe\u7f6e\u91c7\u6837\u7387\n\n    try:\n        p = PyAudio()\n        p.initialize(CHUNK) #\u521d\u59cb\u5316PyAudio\u5bf9\u8c61\n        dec = g711.Decoder(K_PT_G711A,CHUNK) #\u521b\u5efag711\u89e3\u7801\u5668\u5bf9\u8c61\n        enc = g711.Encoder(K_PT_G711A,CHUNK) #\u521b\u5efag711\u7f16\u7801\u5668\u5bf9\u8c61\n        MediaManager.init()    #vb buffer\u521d\u59cb\u5316\n\n        dec.create() #\u521b\u5efag711\u89e3\u7801\u5668\n        enc.create() #\u521b\u5efag711\u7f16\u7801\u5668\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u5165\u6d41\n        input_stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=RATE,\n                        input=True,\n                        frames_per_buffer=CHUNK)\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u51fa\u6d41\n        output_stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=RATE,\n                        output=True,\n                        frames_per_buffer=CHUNK)\n\n        #\u4ece\u97f3\u9891\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6\u6570\u636e->\u7f16\u7801->\u89e3\u7801->\u5199\u5165\u5230\u97f3\u9891\u8f93\u51fa\u6d41\u4e2d\n        for i in range(0, int(RATE / CHUNK * duration)):\n            frame_data = input_stream.read() #\u4ece\u97f3\u9891\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6raw\u97f3\u9891\u6570\u636e\n            stream_data = enc.encode(frame_data) #\u7f16\u7801\u97f3\u9891\u6570\u636e\u4e3ag711\n            frame_data = dec.decode(stream_data) #\u89e3\u7801g711\u6570\u636e\u4e3araw\u6570\u636e\n            output_stream.write(frame_data) #\u64ad\u653eraw\u6570\u636e\n            if exit_check():\n                break\n        input_stream.stop_stream() #\u505c\u6b62\u97f3\u9891\u8f93\u5165\u6d41\n        output_stream.stop_stream() #\u505c\u6b62\u97f3\u9891\u8f93\u51fa\u6d41\n        input_stream.close() #\u5173\u95ed\u97f3\u9891\u8f93\u5165\u6d41\n        output_stream.close() #\u5173\u95ed\u97f3\u9891\u8f93\u51fa\u6d41\n        p.terminate() #\u91ca\u653e\u97f3\u9891\u5bf9\u8c61\n        dec.destroy() #\u9500\u6bc1g711\u89e3\u7801\u5668\n        enc.destroy() #\u9500\u6bc1g711\u7f16\u7801\u5668\n    except BaseException as e:\n            print(f"Exception {e}")\n    finally:\n        MediaManager.deinit() #\u91ca\u653evb buffer\n\nif __name__ == "__main__":\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    print("audio codec sample start")\n    #encode_audio(\'/sdcard/app/test.g711a\', 15) #\u91c7\u96c6\u5e76\u7f16\u7801g711\u6587\u4ef6\n    #decode_audio(\'/sdcard/app/test.g711a\') #\u89e3\u7801g711\u6587\u4ef6\u5e76\u8f93\u51fa\n    loop_codec(15) #\u91c7\u96c6\u97f3\u9891\u6570\u636e->\u7f16\u7801g711->\u89e3\u7801g711->\u64ad\u653e\u97f3\u9891\n    print("audio codec sample done")\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_%E6%92%AD%E6%94%BE%E5%99%A8%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"acodec"})]}),"\n",(0,t.jsx)(e.h2,{id:"2audio---\u97f3\u9891\u91c7\u96c6\u8f93\u51fa\u4f8b\u7a0b",children:"2.audio - \u97f3\u9891\u91c7\u96c6\u8f93\u51fa\u4f8b\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u793a\u4f8b\u7a0b\u5e8f\u7528\u4e8e\u5bf9 CanMV \u5f00\u53d1\u677f\u8fdb\u884c\u4e00\u4e2a\u97f3\u9891\u91c7\u96c6\u548c\u8f93\u51fa\u7684\u529f\u80fd\u5c55\u793a\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# audio input and output example\n#\n# Note: You will need an SD card to run this example.\n#\n# You can play wav files or capture audio to save as wav\n\nimport os\nfrom media.media import *   #\u5bfc\u5165media\u6a21\u5757\uff0c\u7528\u4e8e\u521d\u59cb\u5316vb buffer\nfrom media.pyaudio import * #\u5bfc\u5165pyaudio\u6a21\u5757\uff0c\u7528\u4e8e\u91c7\u96c6\u548c\u64ad\u653e\u97f3\u9891\nimport media.wave as wave   #\u5bfc\u5165wav\u6a21\u5757\uff0c\u7528\u4e8e\u4fdd\u5b58\u548c\u52a0\u8f7dwav\u97f3\u9891\u6587\u4ef6\n\ndef exit_check():\n    try:\n        os.exitpoint()\n    except KeyboardInterrupt as e:\n        print("user stop: ", e)\n        return True\n    return False\n\ndef record_audio(filename, duration):\n    CHUNK = int(44100/25)  #\u8bbe\u7f6e\u97f3\u9891chunk\u503c\n    FORMAT = paInt16       #\u8bbe\u7f6e\u91c7\u6837\u7cbe\u5ea6\n    CHANNELS = 2           #\u8bbe\u7f6e\u58f0\u9053\u6570\n    RATE = 44100           #\u8bbe\u7f6e\u91c7\u6837\u7387\n\n    try:\n        p = PyAudio()\n        p.initialize(CHUNK)    #\u521d\u59cb\u5316PyAudio\u5bf9\u8c61\n        MediaManager.init()    #vb buffer\u521d\u59cb\u5316\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u5165\u6d41\n        stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=RATE,\n                        input=True,\n                        frames_per_buffer=CHUNK)\n\n        frames = []\n        #\u91c7\u96c6\u97f3\u9891\u6570\u636e\u5e76\u5b58\u5165\u5217\u8868\n        for i in range(0, int(RATE / CHUNK * duration)):\n            data = stream.read()\n            frames.append(data)\n            if exit_check():\n                break\n        #\u5c06\u5217\u8868\u4e2d\u7684\u6570\u636e\u4fdd\u5b58\u5230wav\u6587\u4ef6\u4e2d\n        wf = wave.open(filename, \'wb\') #\u521b\u5efawav \u6587\u4ef6\n        wf.set_channels(CHANNELS) #\u8bbe\u7f6ewav \u58f0\u9053\u6570\n        wf.set_sampwidth(p.get_sample_size(FORMAT))  #\u8bbe\u7f6ewav \u91c7\u6837\u7cbe\u5ea6\n        wf.set_framerate(RATE)  #\u8bbe\u7f6ewav \u91c7\u6837\u7387\n        wf.write_frames(b\'\'.join(frames)) #\u5b58\u50a8wav\u97f3\u9891\u6570\u636e\n        wf.close() #\u5173\u95edwav\u6587\u4ef6\n    except BaseException as e:\n            print(f"Exception {e}")\n    finally:\n        stream.stop_stream() #\u505c\u6b62\u91c7\u96c6\u97f3\u9891\u6570\u636e\n        stream.close()#\u5173\u95ed\u97f3\u9891\u8f93\u5165\u6d41\n        p.terminate()#\u91ca\u653e\u97f3\u9891\u5bf9\u8c61\n        MediaManager.deinit() #\u91ca\u653evb buffer\n\ndef play_audio(filename):\n    try:\n        wf = wave.open(filename, \'rb\')#\u6253\u5f00wav\u6587\u4ef6\n        CHUNK = int(wf.get_framerate()/25)#\u8bbe\u7f6e\u97f3\u9891chunk\u503c\n\n        p = PyAudio()\n        p.initialize(CHUNK) #\u521d\u59cb\u5316PyAudio\u5bf9\u8c61\n        MediaManager.init()    #vb buffer\u521d\u59cb\u5316\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u51fa\u6d41\uff0c\u8bbe\u7f6e\u7684\u97f3\u9891\u53c2\u6570\u5747\u4e3awave\u4e2d\u83b7\u53d6\u5230\u7684\u53c2\u6570\n        stream = p.open(format=p.get_format_from_width(wf.get_sampwidth()),\n                    channels=wf.get_channels(),\n                    rate=wf.get_framerate(),\n                    output=True,frames_per_buffer=CHUNK)\n\n        data = wf.read_frames(CHUNK)#\u4ecewav\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u4e00\u5e27\u6570\u636e\n\n        while data:\n            stream.write(data)  #\u5c06\u5e27\u6570\u636e\u5199\u5165\u5230\u97f3\u9891\u8f93\u51fa\u6d41\u4e2d\n            data = wf.read_frames(CHUNK) #\u4ecewav\u6587\u4ef6\u4e2d\u8bfb\u53d6\u6570\u4e00\u5e27\u6570\u636e\n            if exit_check():\n                break\n    except BaseException as e:\n            print(f"Exception {e}")\n    finally:\n        stream.stop_stream() #\u505c\u6b62\u97f3\u9891\u8f93\u51fa\u6d41\n        stream.close()#\u5173\u95ed\u97f3\u9891\u8f93\u51fa\u6d41\n        p.terminate()#\u91ca\u653e\u97f3\u9891\u5bf9\u8c61\n        wf.close()#\u5173\u95edwav\u6587\u4ef6\n\n        MediaManager.deinit() #\u91ca\u653evb buffer\n\n\ndef loop_audio(duration):\n    CHUNK = int(44100/25)#\u8bbe\u7f6e\u97f3\u9891chunck\n    FORMAT = paInt16 #\u8bbe\u7f6e\u97f3\u9891\u91c7\u6837\u7cbe\u5ea6\n    CHANNELS = 2 #\u8bbe\u7f6e\u97f3\u9891\u58f0\u9053\u6570\n    RATE = 44100 #\u8bbe\u7f6e\u97f3\u9891\u91c7\u6837\u7387\n\n    try:\n        p = PyAudio()\n        p.initialize(CHUNK)#\u521d\u59cb\u5316PyAudio\u5bf9\u8c61\n        MediaManager.init()    #vb buffer\u521d\u59cb\u5316\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u5165\u6d41\n        input_stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=RATE,\n                        input=True,\n                        frames_per_buffer=CHUNK)\n\n        #\u521b\u5efa\u97f3\u9891\u8f93\u51fa\u6d41\n        output_stream = p.open(format=FORMAT,\n                        channels=CHANNELS,\n                        rate=RATE,\n                        output=True,frames_per_buffer=CHUNK)\n\n        #\u4ece\u97f3\u9891\u8f93\u5165\u6d41\u4e2d\u83b7\u53d6\u6570\u636e\u5199\u5165\u5230\u97f3\u9891\u8f93\u51fa\u6d41\u4e2d\n        for i in range(0, int(RATE / CHUNK * duration)):\n            output_stream.write(input_stream.read())\n            if exit_check():\n                break\n    except BaseException as e:\n            print(f"Exception {e}")\n    finally:\n        input_stream.stop_stream()#\u505c\u6b62\u97f3\u9891\u8f93\u5165\u6d41\n        output_stream.stop_stream()#\u505c\u6b62\u97f3\u9891\u8f93\u51fa\u6d41\n        input_stream.close() #\u5173\u95ed\u97f3\u9891\u8f93\u5165\u6d41\n        output_stream.close() #\u5173\u95ed\u97f3\u9891\u8f93\u51fa\u6d41\n        p.terminate() #\u91ca\u653e\u97f3\u9891\u5bf9\u8c61\n\n        MediaManager.deinit() #\u91ca\u653evb buffer\n\nif __name__ == "__main__":\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    print("audio sample start")\n    #play_audio(\'/sdcard/app/input.wav\') #\u64ad\u653ewav\u6587\u4ef6\n    #record_audio(\'/sdcard/app/output.wav\', 15)  #\u5f55\u5236wav\u6587\u4ef6\n    loop_audio(15) #\u91c7\u96c6\u97f3\u9891\u5e76\u8f93\u51fa\n    print("audio sample done")\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_Audio%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"audio"})]}),"\n",(0,t.jsx)(e.h2,{id:"3camera---\u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b",children:"3.Camera - \u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# Camera Example\nimport time, os, sys\n\nfrom media.sensor import *\nfrom media.display import *\nfrom media.media import *\n\nsensor = None\n\ntry:\n    print("camera_test")\n\n    # construct a Sensor object with default configure\n    sensor = Sensor()\n    # sensor reset\n    sensor.reset()\n    # set hmirror\n    # sensor.set_hmirror(False)\n    # sensor vflip\n    # sensor.set_vflip(False)\n\n    # set chn0 output size, 1920x1080\n    sensor.set_framesize(Sensor.FHD)\n    # set chn0 output format\n    sensor.set_pixformat(Sensor.YUV420SP)\n    # bind sensor chn0 to display layer video 1\n    bind_info = sensor.bind_info()\n    Display.bind_layer(**bind_info, layer = Display.LAYER_VIDEO1)\n\n    # set chn1 output format\n    sensor.set_framesize(width = 640, height = 480, chn = CAM_CHN_ID_1)\n    sensor.set_pixformat(Sensor.RGB888, chn = CAM_CHN_ID_1)\n\n    # set chn2 output format\n    sensor.set_framesize(width = 640, height = 480, chn = CAM_CHN_ID_2)\n    sensor.set_pixformat(Sensor.RGB565, chn = CAM_CHN_ID_2)\n\n    # use hdmi as display output\n    Display.init(Display.LT9611, to_ide = True, osd_num = 2)\n    # init media manager\n    MediaManager.init()\n    # sensor start run\n    sensor.run()\n\n    while True:\n        os.exitpoint()\n\n        img = sensor.snapshot(chn = CAM_CHN_ID_1)\n        Display.show_image(img, alpha = 128)\n\n        img = sensor.snapshot(chn = CAM_CHN_ID_2)\n        Display.show_image(img, x = 1920 - 640, layer = Display.LAYER_OSD1)\n\nexcept KeyboardInterrupt as e:\n    print("user stop: ", e)\nexcept BaseException as e:\n    print(f"Exception {e}")\nfinally:\n    # sensor stop run\n    if isinstance(sensor, Sensor):\n        sensor.stop()\n    # deinit display\n    Display.deinit()\n    os.exitpoint(os.EXITPOINT_ENABLE_SLEEP)\n    time.sleep_ms(100)\n    # release media buffer\n    MediaManager.deinit()\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_Sensor%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"camera"})]}),"\n",(0,t.jsx)(e.h2,{id:"4-camera---\u591a\u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b",children:"4. Camera - \u591a\u6444\u50cf\u5934\u9884\u89c8\u53ca\u56fe\u50cf\u91c7\u96c6\u793a\u4f8b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# Camera Example\n#\n# Note: You will need an SD card to run this example.\n#\n# You can start 2 camera preview.\nimport time, os, sys\n\nfrom media.sensor import *\nfrom media.display import *\nfrom media.media import *\n\nsensor0 = None\nsensor1 = None\n\ntry:\n    print("camera_test")\n\n    sensor0 = Sensor(id = 0)\n    sensor0.reset()\n    # set chn0 output size, 960x540\n    sensor0.set_framesize(width = 960, height = 540)\n    # set chn0 out format\n    sensor0.set_pixformat(Sensor.YUV420SP)\n    # bind sensor chn0 to display layer video 1\n    bind_info = sensor0.bind_info(x = 0, y = 0)\n    Display.bind_layer(**bind_info, layer = Display.LAYER_VIDEO1)\n\n    sensor1 = Sensor(id = 1)\n    sensor1.reset()\n    # set chn0 output size, 960x540\n    sensor1.set_framesize(width = 960, height = 540)\n    # set chn0 out format\n    sensor1.set_pixformat(Sensor.YUV420SP)\n\n    bind_info = sensor1.bind_info(x = 960, y = 540)\n    Display.bind_layer(**bind_info, layer = Display.LAYER_VIDEO2)\n\n    # use hdmi as display output\n    Display.init(Display.LT9611, to_ide = True)\n    # init media manager\n    MediaManager.init()\n\n    # multiple sensor only need one excute run()\n    sensor0.run()\n\n    while True:\n        os.exitpoint()\n        time.sleep(1)\nexcept KeyboardInterrupt as e:\n    print("user stop")\nexcept BaseException as e:\n    print(f"Exception \'{e}\'")\nfinally:\n    # multiple sensor all need excute stop()\n    if isinstance(sensor0, Sensor):\n        sensor0.stop()\n    if isinstance(sensor1, Sensor):\n        sensor1.stop()\n    # or call Sensor.deinit()\n    # Sensor.deinit()\n\n    # deinit display\n    Display.deinit()\n\n    os.exitpoint(os.EXITPOINT_ENABLE_SLEEP)\n    time.sleep_ms(100)\n    # deinit media buffer\n    MediaManager.deinit()\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_Sensor%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"camera"})]}),"\n",(0,t.jsx)(e.h2,{id:"5-display---\u56fe\u50cf\u91c7\u96c6\u663e\u793a\u5b9e\u4f8b",children:"5. Display - \u56fe\u50cf\u91c7\u96c6\u663e\u793a\u5b9e\u4f8b"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'import time, os, urandom, sys\n\nfrom media.display import *\nfrom media.media import *\n\nDISPLAY_WIDTH = ALIGN_UP(1920, 16)\nDISPLAY_HEIGHT = 1080\n\ndef display_test():\n    print("display test")\n\n    # create image for drawing\n    img = image.Image(DISPLAY_WIDTH, DISPLAY_HEIGHT, image.ARGB8888)\n\n    # use hdmi as display output\n    Display.init(Display.LT9611, to_ide = True)\n    # init media manager\n    MediaManager.init()\n\n    try:\n        while True:\n            img.clear()\n            for i in range(10):\n                x = (urandom.getrandbits(11) % img.width())\n                y = (urandom.getrandbits(11) % img.height())\n                r = (urandom.getrandbits(8))\n                g = (urandom.getrandbits(8))\n                b = (urandom.getrandbits(8))\n                size = (urandom.getrandbits(30) % 64) + 32\n                # If the first argument is a scaler then this method expects\n                # to see x, y, and text. Otherwise, it expects a (x,y,text) tuple.\n                # Character and string rotation can be done at 0, 90, 180, 270, and etc. degrees.\n                img.draw_string_advanced(x,y,size, "Hello World!\uff0c\u4f60\u597d\u4e16\u754c\uff01\uff01\uff01", color = (r, g, b),)\n\n            # draw result to screen\n            Display.show_image(img)\n\n            time.sleep(1)\n            os.exitpoint()\n    except KeyboardInterrupt as e:\n        print("user stop: ", e)\n    except BaseException as e:\n        print(f"Exception {e}")\n\n    # deinit display\n    Display.deinit()\n    os.exitpoint(os.EXITPOINT_ENABLE_SLEEP)\n    time.sleep_ms(100)\n    # release media buffer\n    MediaManager.deinit()\n\nif __name__ == "__main__":\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    display_test()\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_Display%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"display"})]}),"\n",(0,t.jsx)(e.h2,{id:"6-mp4-muxer-\u4f8b\u7a0b",children:"6. mp4 muxer \u4f8b\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u793a\u4f8b\u7a0b\u5e8f\u7528\u4e8e\u5728 CanMV \u5f00\u53d1\u677f\u8fdb\u884c mp4 muxer \u7684\u529f\u80fd\u5c55\u793a\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# Save MP4 file example\n#\n# Note: You will need an SD card to run this example.\n#\n# You can capture audio and video and save them as MP4.The current version only supports MP4 format, video supports 264/265, and audio supports g711a/g711u.\n\nfrom media.mp4format import *\nimport os\n\ndef mp4_muxer_test():\n    print("mp4_muxer_test start")\n    width = 1280\n    height = 720\n    # \u5b9e\u4f8b\u5316mp4 container\n    mp4_muxer = Mp4Container()\n    mp4_cfg = Mp4CfgStr(mp4_muxer.MP4_CONFIG_TYPE_MUXER)\n    if mp4_cfg.type == mp4_muxer.MP4_CONFIG_TYPE_MUXER:\n        file_name = "/sdcard/app/tests/test.mp4"\n        mp4_cfg.SetMuxerCfg(file_name, mp4_muxer.MP4_CODEC_ID_H265, width, height, mp4_muxer.MP4_CODEC_ID_G711U)\n    # \u521b\u5efamp4 muxer\n    mp4_muxer.Create(mp4_cfg)\n    # \u542f\u52a8mp4 muxer\n    mp4_muxer.Start()\n\n    frame_count = 0\n    try:\n        while True:\n            os.exitpoint()\n            # \u5904\u7406\u97f3\u89c6\u9891\u6570\u636e\uff0c\u6309MP4\u683c\u5f0f\u5199\u5165\u6587\u4ef6\n            mp4_muxer.Process()\n            frame_count += 1\n            print("frame_count = ", frame_count)\n            if frame_count >= 200:\n                break\n    except BaseException as e:\n        print(e)\n    # \u505c\u6b62mp4 muxer\n    mp4_muxer.Stop()\n    # \u9500\u6bc1mp4 muxer\n    mp4_muxer.Destroy()\n    print("mp4_muxer_test stop")\n\nif __name__ == "__main__":\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    mp4_muxer_test()\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_MP4%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"VENC"})]}),"\n",(0,t.jsx)(e.h2,{id:"8-player---mp4-\u6587\u4ef6\u64ad\u653e\u5668\u4f8b\u7a0b",children:"8. player - mp4 \u6587\u4ef6\u64ad\u653e\u5668\u4f8b\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u793a\u4f8b\u7a0b\u5e8f\u7528\u4e8e\u5bf9 CanMV \u5f00\u53d1\u677f\u8fdb\u884c\u4e00\u4e2a mp4 \u6587\u4ef6\u64ad\u653e\u5668\u7684\u529f\u80fd\u5c55\u793a\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# play mp4 file example\n#\n# Note: You will need an SD card to run this example.\n#\n# You can load local files to play. The current version only supports MP4 format, video supports 264/265, and audio supports g711a/g711u.\n\nfrom media.player import * #\u5bfc\u5165\u64ad\u653e\u5668\u6a21\u5757\uff0c\u7528\u4e8e\u64ad\u653emp4\u6587\u4ef6\nimport os\n\nstart_play = False #\u64ad\u653e\u7ed3\u675fflag\ndef player_event(event,data):\n    global start_play\n    if(event == K_PLAYER_EVENT_EOF): #\u64ad\u653e\u7ed3\u675f\u6807\u8bc6\n        start_play = False #\u8bbe\u7f6e\u64ad\u653e\u7ed3\u675f\u6807\u8bc6\n\ndef play_mp4_test(filename):\n    global start_play\n    player=Player() #\u521b\u5efa\u64ad\u653e\u5668\u5bf9\u8c61\n    player.load(filename) #\u52a0\u8f7dmp4\u6587\u4ef6\n    player.set_event_callback(player_event) #\u8bbe\u7f6e\u64ad\u653e\u5668\u4e8b\u4ef6\u56de\u8c03\n    player.start() #\u5f00\u59cb\u64ad\u653e\n    start_play = True\n\n    #\u7b49\u5f85\u64ad\u653e\u7ed3\u675f\n    try:\n        while(start_play):\n            time.sleep(0.1)\n            os.exitpoint()\n    except KeyboardInterrupt as e:\n        print("user stop: ", e)\n    except BaseException as e:\n        sys.print_exception(e)\n\n    player.stop() #\u505c\u6b62\u64ad\u653e\n    print("play over")\n\nif __name__ == "__main__":\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    play_mp4_test("/sdcard/app/tests/test.mp4")#\u64ad\u653emp4\u6587\u4ef6\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_%E6%92%AD%E6%94%BE%E5%99%A8%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"player"})]}),"\n",(0,t.jsx)(e.h2,{id:"9-venc---venc-\u4f8b\u7a0b",children:"9. venc - venc \u4f8b\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u793a\u4f8b\u7a0b\u5e8f\u7528\u4e8e\u5728 CanMV \u5f00\u53d1\u677f\u8fdb\u884c venc \u89c6\u9891\u7f16\u7801\u7684\u529f\u80fd\u5c55\u793a\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'# Video encode example\n#\n# Note: You will need an SD card to run this example.\n#\n# You can capture videos and encode them into 264 files\n\nfrom media.vencoder import *\nfrom media.sensor import *\nfrom media.media import *\nimport time, os\n\ndef venc_test():\n    print("venc_test start")\n    width = 1280\n    height = 720\n    venc_chn = VENC_CHN_ID_0\n    width = ALIGN_UP(width, 16)\n    # \u521d\u59cb\u5316sensor\n\n    sensor = Sensor()\n    sensor.reset()\n    # \u8bbe\u7f6ecamera \u8f93\u51fabuffer\n    # set chn0 output size\n    sensor.set_framesize(width = width, height = height, alignment=12)\n    # set chn0 output format\n    sensor.set_pixformat(Sensor.YUV420SP)\n\n\n    # \u5b9e\u4f8b\u5316video encoder\n    encoder = Encoder()\n    # \u8bbe\u7f6evideo encoder \u8f93\u51fabuffer\n    encoder.SetOutBufs(venc_chn, 15, width, height)\n\n    # \u7ed1\u5b9acamera\u548cvenc\n    link = MediaManager.link(sensor.bind_info()[\'src\'], (VIDEO_ENCODE_MOD_ID, VENC_DEV_ID, venc_chn))\n\n    # init media manager\n    MediaManager.init()\n\n    chnAttr = ChnAttrStr(encoder.PAYLOAD_TYPE_H265, encoder.H265_PROFILE_MAIN, width, height)\n    streamData = StreamData()\n\n    # \u521b\u5efa\u7f16\u7801\u5668\n    encoder.Create(venc_chn, chnAttr)\n\n    # \u5f00\u59cb\u7f16\u7801\n    encoder.Start(venc_chn)\n    # \u542f\u52a8camera\n    sensor.run()\n\n    frame_count = 0\n    if chnAttr.payload_type == encoder.PAYLOAD_TYPE_H265:\n        suffix = "265"\n    elif chnAttr.payload_type == encoder.PAYLOAD_TYPE_H264:\n        suffix = "264"\n    else:\n        suffix = "unkown"\n        print("cam_venc_test, venc payload_type unsupport")\n\n    out_file = f"/sdcard/app/tests/venc_chn_{venc_chn:02d}.{suffix}"\n    print("save stream to file: ", out_file)\n\n    with open(out_file, "wb") as fo:\n        try:\n            while True:\n                os.exitpoint()\n                encoder.GetStream(venc_chn, streamData) # \u83b7\u53d6\u4e00\u5e27\u7801\u6d41\n\n                for pack_idx in range(0, streamData.pack_cnt):\n                    stream_data = uctypes.bytearray_at(streamData.data[pack_idx], streamData.data_size[pack_idx])\n                    fo.write(stream_data) # \u7801\u6d41\u5199\u6587\u4ef6\n                    print("stream size: ", streamData.data_size[pack_idx], "stream type: ", streamData.stream_type[pack_idx])\n\n                encoder.ReleaseStream(venc_chn, streamData) # \u91ca\u653e\u4e00\u5e27\u7801\u6d41\n\n                frame_count += 1\n                if frame_count >= 100:\n                    break\n        except KeyboardInterrupt as e:\n            print("user stop: ", e)\n        except BaseException as e:\n            sys.print_exception(e)\n\n    # \u505c\u6b62camera\n    sensor.stop()\n    # \u9500\u6bc1camera\u548cvenc\u7684\u7ed1\u5b9a\n    del link\n    # \u505c\u6b62\u7f16\u7801\n    encoder.Stop(venc_chn)\n    # \u9500\u6bc1\u7f16\u7801\u5668\n    encoder.Destroy(venc_chn)\n    # \u6e05\u7406buffer\n    MediaManager.deinit()\n    print("venc_test stop")\n\nif __name__ == "__main__":\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    venc_test()\n'})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/mpp/K230_CanMV_VENC%E6%A8%A1%E5%9D%97API%E6%89%8B%E5%86%8C.html",children:"VENC"})]}),"\n",(0,t.jsx)(e.h2,{id:"10-lvgl---lvgl-\u4f8b\u7a0b",children:"10. lvgl - lvgl \u4f8b\u7a0b"}),"\n",(0,t.jsx)(e.p,{children:"\u672c\u793a\u4f8b\u7a0b\u5e8f\u7528\u4e8e\u5bf9 CanMV \u5f00\u53d1\u677f\u8fdb\u884c\u4e00\u4e2a lvgl \u7684\u529f\u80fd\u5c55\u793a\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"from media.display import *\nfrom media.media import *\nimport time, os, sys, gc\nimport lvgl as lv\n\nDISPLAY_WIDTH = ALIGN_UP(1920, 16)\nDISPLAY_HEIGHT = 1080\n\ndef display_init():\n    # use hdmi for display\n    Display.init(Display.LT9611, to_ide = False)\n    # init media manager\n    MediaManager.init()\n\ndef display_deinit():\n    os.exitpoint(os.EXITPOINT_ENABLE_SLEEP)\n    time.sleep_ms(50)\n    # deinit display\n    Display.deinit()\n    # release media buffer\n    MediaManager.deinit()\n\ndef disp_drv_flush_cb(disp_drv, area, color):\n    global disp_img1, disp_img2\n\n    if disp_drv.flush_is_last() == True:\n        if disp_img1.virtaddr() == uctypes.addressof(color.__dereference__()):\n            Display.show_image(disp_img1)\n        else:\n            Display.show_image(disp_img2)\n    disp_drv.flush_ready()\n\ndef lvgl_init():\n    global disp_img1, disp_img2\n\n    lv.init()\n    disp_drv = lv.disp_create(DISPLAY_WIDTH, DISPLAY_HEIGHT)\n    disp_drv.set_flush_cb(disp_drv_flush_cb)\n    disp_img1 = image.Image(DISPLAY_WIDTH, DISPLAY_HEIGHT, image.ARGB8888)\n    disp_img2 = image.Image(DISPLAY_WIDTH, DISPLAY_HEIGHT, image.ARGB8888)\n    disp_drv.set_draw_buffers(disp_img1.bytearray(), disp_img2.bytearray(), disp_img1.size(), lv.DISP_RENDER_MODE.DIRECT)\n\ndef lvgl_deinit():\n    global disp_img1, disp_img2\n\n    lv.deinit()\n    del disp_img1\n    del disp_img2\n\ndef user_gui_init():\n    res_path = \"/sdcard/app/tests/lvgl/data/\"\n\n    font_montserrat_16 = lv.font_load(\"A:\" + res_path + \"font/montserrat-16.fnt\")\n    ltr_label = lv.label(lv.scr_act())\n    ltr_label.set_text(\"In modern terminology, a microcontroller is similar to a system on a chip (SoC).\")\n    ltr_label.set_style_text_font(font_montserrat_16,0)\n    ltr_label.set_width(310)\n    ltr_label.align(lv.ALIGN.TOP_MID, 0, 0)\n\n    font_simsun_16_cjk = lv.font_load(\"A:\" + res_path + \"font/lv_font_simsun_16_cjk.fnt\")\n    cz_label = lv.label(lv.scr_act())\n    cz_label.set_style_text_font(font_simsun_16_cjk, 0)\n    cz_label.set_text(\"\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff08Embedded System\uff09\uff0c\\n\u662f\u4e00\u79cd\u5d4c\u5165\u673a\u68b0\u6216\u7535\u6c14\u7cfb\u7edf\u5185\u90e8\u3001\u5177\u6709\u4e13\u4e00\u529f\u80fd\u548c\u5b9e\u65f6\u8ba1\u7b97\u6027\u80fd\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf\u3002\")\n    cz_label.set_width(310)\n    cz_label.align(lv.ALIGN.BOTTOM_MID, 0, 0)\n\n    anim_imgs = [None]*4\n    with open(res_path + 'img/animimg001.png','rb') as f:\n        anim001_data = f.read()\n\n    anim_imgs[0] = lv.img_dsc_t({\n    'data_size': len(anim001_data),\n    'data': anim001_data\n    })\n    anim_imgs[-1] = anim_imgs[0]\n\n    with open(res_path + 'img/animimg002.png','rb') as f:\n        anim002_data = f.read()\n\n    anim_imgs[1] = lv.img_dsc_t({\n    'data_size': len(anim002_data),\n    'data': anim002_data\n    })\n\n    with open(res_path + 'img/animimg003.png','rb') as f:\n        anim003_data = f.read()\n\n    anim_imgs[2] = lv.img_dsc_t({\n    'data_size': len(anim003_data),\n    'data': anim003_data\n    })\n\n    animimg0 = lv.animimg(lv.scr_act())\n    animimg0.center()\n    animimg0.set_src(anim_imgs, 4)\n    animimg0.set_duration(2000)\n    animimg0.set_repeat_count(lv.ANIM_REPEAT_INFINITE)\n    animimg0.start()\n\ndef main():\n    os.exitpoint(os.EXITPOINT_ENABLE)\n    try:\n        display_init()\n        lvgl_init()\n        user_gui_init()\n        while True:\n            time.sleep_ms(lv.task_handler())\n    except BaseException as e:\n        print(f\"Exception {e}\")\n    lvgl_deinit()\n    display_deinit()\n    gc.collect()\n\nif __name__ == \"__main__\":\n    main()\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u63a5\u53e3\u5b9a\u4e49\u8bf7\u53c2\u8003 ",(0,t.jsx)(e.a,{href:"https://developer.canaan-creative.com/k230_canmv/main/zh/api/lvgl/lvgl.html",children:"lvgl"})]})]})}function _(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(m,{...n})}):m(n)}},28453:(n,e,a)=>{a.d(e,{R:()=>s,x:()=>o});var t=a(96540);const i={},r=t.createContext(i);function s(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:s(n.components),t.createElement(r.Provider,{value:e},n.children)}}}]);